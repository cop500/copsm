// Script de test pour v√©rifier le syst√®me des stagiaires ambassadeurs
// √Ä ex√©cuter dans la console du navigateur sur la page /ambassadeurs

console.log('üß™ Test du syst√®me Stagiaires Ambassadeurs');

// Test 1: V√©rifier que la page se charge
const pageTitle = document.querySelector('h1');
if (pageTitle && pageTitle.textContent.includes('Formulaire de Suivi des Actions')) {
  console.log('‚úÖ Page du formulaire charg√©e correctement');
} else {
  console.log('‚ùå Page du formulaire non trouv√©e');
}

// Test 2: V√©rifier que tous les champs sont pr√©sents
const requiredFields = [
  'nom_prenom_stagiaire',
  'volet_action', 
  'responsable_action',
  'lieu_realisation',
  'date_action',
  'nombre_participants'
];

let allFieldsPresent = true;
requiredFields.forEach(fieldName => {
  const field = document.querySelector(`[name="${fieldName}"]`);
  if (field) {
    console.log(`‚úÖ Champ ${fieldName} pr√©sent`);
  } else {
    console.log(`‚ùå Champ ${fieldName} manquant`);
    allFieldsPresent = false;
  }
});

// Test 3: V√©rifier les options du menu d√©roulant des volets
const voletSelect = document.querySelector('select[name="volet_action"]');
if (voletSelect) {
  const options = voletSelect.querySelectorAll('option');
  const expectedVolets = [
    'Information/Communication',
    'Accompagnement Projets', 
    'Assistance Carri√®re',
    'Assistance Fili√®re'
  ];
  
  let allVoletsPresent = true;
  expectedVolets.forEach(volet => {
    const optionExists = Array.from(options).some(option => 
      option.textContent.includes(volet)
    );
    if (optionExists) {
      console.log(`‚úÖ Volet "${volet}" pr√©sent`);
    } else {
      console.log(`‚ùå Volet "${volet}" manquant`);
      allVoletsPresent = false;
    }
  });
  
  if (allVoletsPresent) {
    console.log('‚úÖ Tous les volets sont pr√©sents');
  }
}

// Test 4: V√©rifier la validation
const submitButton = document.querySelector('button[type="submit"]');
if (submitButton) {
  console.log('‚úÖ Bouton de soumission pr√©sent');
  
  // Simuler un clic pour tester la validation
  submitButton.click();
  
  // V√©rifier si des messages d'erreur apparaissent
  setTimeout(() => {
    const errorMessages = document.querySelectorAll('[class*="text-red-600"]');
    if (errorMessages.length > 0) {
      console.log('‚úÖ Validation fonctionne - messages d\'erreur affich√©s');
    } else {
      console.log('‚ö†Ô∏è Validation - aucun message d\'erreur d√©tect√©');
    }
  }, 100);
} else {
  console.log('‚ùå Bouton de soumission non trouv√©');
}

// Test 5: V√©rifier le style et la responsivit√©
const formContainer = document.querySelector('.min-h-screen');
if (formContainer) {
  console.log('‚úÖ Container principal pr√©sent');
  
  // V√©rifier les classes CSS importantes
  const hasGradient = formContainer.className.includes('bg-gradient-to-br');
  const hasPadding = formContainer.className.includes('py-8');
  
  if (hasGradient && hasPadding) {
    console.log('‚úÖ Styles CSS appliqu√©s correctement');
  } else {
    console.log('‚ö†Ô∏è Styles CSS - v√©rification manuelle n√©cessaire');
  }
}

console.log('üéØ Tests termin√©s - V√©rifiez les r√©sultats ci-dessus');

// Instructions pour les tests manuels
console.log(`
üìã Tests manuels √† effectuer :

1. Remplir le formulaire avec des donn√©es de test :
   - Nom: "Jean Dupont"
   - Volet: "Information/Communication" 
   - Responsable: "Marie Martin"
   - Lieu: "Lyc√©e Technique, Casablanca"
   - Date: Date d'aujourd'hui
   - Participants: 25

2. Soumettre le formulaire et v√©rifier :
   - Message de succ√®s affich√©
   - Formulaire r√©initialis√©
   - Pas d'erreurs dans la console

3. Aller dans l'onglet "Espace Ambassadeurs" et v√©rifier :
   - L'action appara√Æt dans la liste
   - Les statistiques sont mises √† jour
   - Les filtres fonctionnent
   - L'export CSV fonctionne

4. Tester la suppression d'une action

5. V√©rifier la responsivit√© sur mobile
`);

