// Script de test pour v√©rifier l'API Resend
const { Resend } = require('resend')
require('dotenv').config({ path: '.env.local' })

async function testResendAPI() {
  console.log('üîç Test de l\'API Resend...\n')

  // V√©rifier la cl√© API
  const apiKey = process.env.RESEND_API_KEY
  console.log('Cl√© API Resend:', apiKey ? '‚úÖ Configur√©e' : '‚ùå Non configur√©e')
  
  if (!apiKey) {
    console.error('‚ùå ERREUR: La cl√© API Resend n\'est pas configur√©e')
    console.log('üí° SOLUTION: Ajoutez RESEND_API_KEY dans les variables d\'environnement de Netlify')
    return
  }

  // Initialiser Resend
  const resend = new Resend(apiKey)
  console.log('‚úÖ Resend initialis√©\n')

  // Test d'envoi d'email
  console.log('üìß Test d\'envoi d\'email...')
  
  try {
    const { data, error } = await resend.emails.send({
      from: process.env.RESEND_FROM_EMAIL || 'COP System <onboarding@resend.dev>',
      to: 'omar.oumouzoune@ofppt.ma',
      subject: 'Test - Notification COP',
      text: 'Ceci est un email de test depuis le syst√®me COP. Si vous recevez cet email, la configuration est correcte.',
    })

    if (error) {
      console.error('‚ùå Erreur:', error)
      console.error('D√©tails:', JSON.stringify(error, null, 2))
      
      if (error.message?.includes('Invalid API key')) {
        console.log('\nüí° SOLUTION: La cl√© API est invalide. V√©rifiez la cl√© dans Netlify.')
      } else if (error.message?.includes('domain')) {
        console.log('\nüí° SOLUTION: Le domaine d\'envoi n\'est pas v√©rifi√©. Utilisez onboarding@resend.dev temporairement.')
      }
    } else {
      console.log('‚úÖ Email envoy√© avec succ√®s!')
      console.log('ID:', data?.id)
      console.log('üì¨ V√©rifiez la bo√Æte email de omar.oumouzoune@ofppt.ma')
    }
  } catch (err) {
    console.error('‚ùå Erreur fatale:', err.message)
    console.error('Stack:', err.stack)
  }
}

testResendAPI().catch(console.error)

